[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[ext_resource path="res://textures/old/Cut.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=2]
constant = Color( 0.784314, 0.706189, 0.196078, 1 )

[sub_resource type="VisualShaderNodeColorOp" id=3]
operator = 4

[sub_resource type="VisualShader" id=4]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -231, 46.5 )
nodes/fragment/0/position = Vector2( 400, 140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -100, 60 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 0, 340 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 200, 360 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 2, 0, 0, 0, 2, 1, 0, 1 )

[resource]
shader = SubResource( 4 )
