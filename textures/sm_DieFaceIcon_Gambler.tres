[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[ext_resource path="res://textures/Dice.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=14]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=16]
constant = Color( 0.919626, 0.99476, 0.577069, 1 )

[sub_resource type="VisualShaderNodeVectorInterp" id=17]

[sub_resource type="VisualShader" id=13]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_14;



void vertex() {
// Output:0

}

void fragment() {
// Color:16
	vec3 n_out16p0 = vec3(0.919626, 0.994760, 0.577069);
	float n_out16p1 = 1.000000;

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, UV.xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// VectorMix:17
	vec3 n_out17p0 = mix(n_out16p0, n_out14p0, vec3(n_out14p1));

// Output:0
	ALBEDO = n_out17p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -385.508, 24.3416 )
nodes/fragment/0/position = Vector2( 400, 140 )
nodes/fragment/14/node = SubResource( 14 )
nodes/fragment/14/position = Vector2( -140, 60 )
nodes/fragment/16/node = SubResource( 16 )
nodes/fragment/16/position = Vector2( -80, 300 )
nodes/fragment/17/node = SubResource( 17 )
nodes/fragment/17/position = Vector2( 160, 100 )
nodes/fragment/connections = PoolIntArray( 17, 0, 0, 0, 14, 1, 17, 2, 16, 0, 17, 0, 14, 0, 17, 1 )

[resource]
shader = SubResource( 13 )
