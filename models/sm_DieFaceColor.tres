[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "color"

[sub_resource type="VisualShaderNodeColorConstant" id=2]
constant = Color( 0.9375, 0.931149, 0.531006, 1 )

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Color:3
	vec3 n_out3p0 = vec3(0.937500, 0.931149, 0.531006);
	float n_out3p1 = 1.000000;

// Output:0
	ALBEDO = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -346, -12.5 )
nodes/fragment/0/position = Vector2( 400, 140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 140, 20 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 100, 220 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0 )

[resource]
shader = SubResource( 3 )
